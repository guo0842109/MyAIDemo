import numpy as np

# 创建矩阵

# lst = [[2,3,4],[2,5,7]]
# print(lst)#数组
# [[2, 3, 4], [2, 5, 7]]
# ar1 = np.array(lst)#转为矩阵
# [[2 3 4]
#  [2 5 7]]
# print(ar1)
# print(ar1.shape[0])#最外层是两个维度
# print(ar1.shape[1])#里面一层是3个维度(秩)


# a2 = np.zeros([2,2])
# print(a2)
# [[0. 0.]
#  [0. 0.]]

# a3 = np.ones([3,3])
# print(a3)
# [[1. 1. 1.]
#  [1. 1. 1.]
#  [1. 1. 1.]]

# a4 = np.random.rand(5)#返回5*1的矩阵（数据在0-1之间）
# print(a4.shape[0])
# [0.4642768  0.54910806 0.8254728  0.29735627 0.312891  ]

# a5 = np.random.rand(5,3)#返回5*3的矩阵（数据在0-1之间）
# print(a5)
# [[0.74679426 0.78392265 0.78371884]
#  [0.06626781 0.34244257 0.66487737]
#  [0.01967039 0.03401943 0.19121573]
#  [0.9860539  0.81584794 0.10377701]
#  [0.80872519 0.19250967 0.41015892]]

# a6 = range(5)#返回一个对象，需要使用for循环取出
# print(a6)
# range(0, 5)
# for i in a6:#使用for循环取出数据，这些数据在[0,4)之间的整数
#     print(i)
#     0
#     1
#     2
#     3
#     4

# a7 = np.random.random([3,3])#随机生成3*3的矩阵 0-1之间的数
# print(a7)
# [[0.62988945 0.3659974  0.60319773]
#  [0.49902719 0.10679088 0.38102134]
#  [0.69928149 0.98559712 0.51118653]]


# a8 = np.linspace(0,1,20)#在0-1中间取20个数，平均分
# print(a8)
# [0.         0.05263158 0.10526316 0.15789474 0.21052632 0.26315789
#  0.31578947 0.36842105 0.42105263 0.47368421 0.52631579 0.57894737
#  0.63157895 0.68421053 0.73684211 0.78947368 0.84210526 0.89473684
#  0.94736842 1.        ]


# 从np.random.normal()到正态分布的拟合
# a9 = np.random.normal(0,1,[2,3])
# print(a9)
# #保存矩阵
# np.savez('save.npz',array1 = a9)
# # 加载矩阵
# a10 = np.load('save.npz')
# print(a10['array1'])


# 矩阵索引
# a11 = np.random.random([5,5])
# print(a11)
# print(a11[3])
# print(a11[1,1])
# print(a11[:,2])
# print(a11[1:2,2:3])

# 矩阵运算 点乘 与 对应运算
lst1 = [[1,2,3]]
a12 = np.array(lst1)
# [[1 2 3]
#  [4 5 6]
#  [7 8 9]]
print(a12)
print(a12*a12)
# [[ 1  4  9]
#  [16 25 36]
#  [49 64 81]]

# multiply 对应元素相乘
# 如果希望以数量积的方式进行，则必须使用 np.multiply 函数
# print(np.multiply(a12,a12))
# [[ 1  4  9]
#  [16 25 36]
#  [49 64 81]]

# print(a12.dot(a12))
# [[ 30  36  42]
#  [ 66  81  96]
#  [102 126 150]]
# print(np.matmul(a12,a12))
# [[ 30  36  42]
#  [ 66  81  96]
#  [102 126 150]]

# lst2 = [[1,2,3],[4,5,6]]
# a13 = np.array(lst2)
# print(np.multiply(a13,a13))
# print(a13*a13)

# print(np.dot(a13,a13))
# np.matmul(a13,a13)

# a = np.mat([[2, 3, 4]])
# b = np.mat([[1,2,3]] )
# print(a)
# print(b)
# print(a*a)




